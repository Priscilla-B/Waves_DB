--creating database
CREATE DATABASE wave
    WITH 
    OWNER = postgres
    ENCODING = 'UTF8'
    CONNECTION LIMIT = -1;

-- creating tables
CREATE TABLE users (u_id integer PRIMARY KEY,
name text NOT NULL,mobile text NOT NULL,
wallet_id integer NOT NULL,
when_created timestamp without time zone NOT NULL);

CREATE TABLE transfers (transfer_id integer PRIMARY KEY,
u_id integer NOT NULL,source_wallet_id integer NOT NULL,
dest_wallet_id integer NOT NULL,
send_amount_currency text NOT NULL,
send_amount_scalar numeric NOT NULL,
receive_amount_currency text NOT NULL,
receive_amount_scalar numeric NOT NULL,
kind text NOT NULL,dest_mobile text,
dest_merchant_id integer,
when_created timestamp without time zone NOT NULL);

CREATE TABLE agents (agent_id integer PRIMARY KEY,
name text,country text NOT NULL,
region text,city text,
subcity text,when_created timestamp without time zone NOT NULL);

CREATE TABLE agent_transactions (atx_id integer PRIMARY KEY,
u_id integer NOT NULL,agent_id integer NOT NULL,
amount numeric NOT NULL,fee_amount_scalar numeric NOT NULL,
when_created timestamp without time zone NOT NULL);
 
CREATE TABLE wallets (wallet_id integer PRIMARY KEY,
currency text NOT NULL,ledger_location text NOT NULL,
when_created timestamp without time zone NOT NULL);


-- Q1: how many users does wave have?
SELECT COUNT(u_id) FROM users;

-- Q2: how many transfers have been sent in the currency CFA?
SELECT COUNT(transfer_id) AS transfers_in_cfa 
FROM transfers 
WHERE send_amount_currency = 'CFA';

-- Q3: how many different users have sent a transfer in CFA?
SELECT COUNT(DISTINCT u_id) FROM transfers
WHERE send_amount_currency = 'CFA';


--Q4: how many agents did we have in the months of 2018 broken down by months?
SELECT TO_CHAR(when_created, 'Month') AS month, COUNT(atx_id) 
FROM agent_transactions
WHERE when_created BETWEEN '01-01-2018' AND '31-12-2018'
GROUP BY month;


--Q5: "net depositors" vs. "net withdrawers" during the last week
--net withdrawers
SELECT COUNT (DISTINCT agent_id) AS net_withdrawers
FROM agent_transactions
WHERE atx.when_created BETWEEN (NOW()-INTERVAL '7 days') AND  NOW()
GROUP BY agent_id
HAVING SUM(amount)>0
--net depositors
SELECT COUNT(DISTINCT agent_id) AS net_depositors
FROM agent_transactions
WHERE atx.when_created BETWEEN (NOW()-INTERVAL '7 days') AND  NOW()
HAVING SUM(amount)<0

--Q6: building atx volume city summary table

--I'm assuming agent_ids in the agent_transactions table are also present in the agents table
--As a result, using a JOIN or a LEFT JOIN gives the same results.
--I used the NOW function to include the time of day a transfer was sent
--As a result, the calculation of the last 7 days is time-sensitive.
--It considers 7 days from the exact time a transfer was created.
SELECT COUNT(atx.atx_id) AS atx_volume, a.city 
FROM agent_transactions AS atx
LEFT JOIN agents AS a ON atx.agent_id = a.agent_id
WHERE atx.when_created BETWEEN (NOW()-INTERVAL '7 days') AND  NOW()
GROUP BY a.city;


--Q7: separating atx volume by country and city
SELECT a.country, a.city, COUNT(atx.atx_id) AS atx_volume
FROM agent_transactions AS atx
LEFT JOIN agents AS a 
ON atx.agent_id = a.agent_id
WHERE atx.when_created BETWEEN (NOW()-INTERVAL '7 days') AND  NOW()
GROUP BY a.country, a.city;


--Q8: building send volume by country and kind table
SELECT wallets.ledger_location AS country,
transfers.kind AS transfer_kind,
COUNT(transfers.send_amount_scalar) AS send_volume  
FROM transfers
LEFT JOIN wallets ON transfers.source_wallet_id = wallets.wallet_id
WHERE transfers.when_created BETWEEN (NOW()-INTERVAL '7 days') AND  NOW()
GROUP BY country, transfer_kind;

--Q9: adding columns for transaction count and number of unique senders
SELECT COUNT(DISTINCT transfers.u_id) AS unique_senders,
wallets.ledger_location AS country,
transfers.kind AS transfer_kind,
COUNT(transfers.send_amount_scalar) AS send_volume,
COUNT(transfers.transfer_id) AS transaction_count
FROM transfers
LEFT JOIN wallets ON transfers.source_wallet_id = wallets.wallet_id
WHERE transfers.when_created BETWEEN (NOW()-INTERVAL '7 days') AND  NOW()
GROUP BY country, transfer_kind;



--Q10:wallets that have sent more than CFA 10,000,000 in transfers in the last month

--I'm assuming that a user can make multiple transfers in a month.
--as a result, the source_wallet_id values could be repeated within a month. 
--This is the reason why I decided to sum the send_scalar_amount values
SELECT source_wallet_id, 
SUM(send_amount_scalar) AS total_amount_sent
FROM transfers
WHERE send_amount_currency = 'CFA' 
AND when_created BETWEEN (NOW() - INTERVAL '1 month') AND NOW()
GROUP BY source_wallet_id
HAVING SUM(send_amount_scalar)>10000000


